<div id="Automatic_weight_set" data-tchmi-type="TcHmi.Controls.System.TcHmiContent" data-tchmi-top="0" data-tchmi-left="0" data-tchmi-width="1052" data-tchmi-height="559" data-tchmi-creator-viewport-width="1920" data-tchmi-creator-viewport-height="1080">
<div id="TcHmiTextblock_258" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="40" data-tchmi-height-unit="px" data-tchmi-left="10" data-tchmi-left-unit="px" data-tchmi-text="P	" data-tchmi-top="451" data-tchmi-top-unit="px" data-tchmi-width="32" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-font-size="30">
</div>
<div id="TcHmiNumericInput_41" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiNumericInput" data-tchmi-auto-focus-out="true" data-tchmi-decimal-digits="0" data-tchmi-height="41" data-tchmi-height-unit="px" data-tchmi-left="704" data-tchmi-left-unit="px" data-tchmi-max-value="100" data-tchmi-min-value="0" data-tchmi-reset-to-last-valid-value="true" data-tchmi-top="217" data-tchmi-top-unit="px" data-tchmi-value="%s%PLC1.HMI_prom.UI_Tlak_test|BindingMode=TwoWay%/s%" data-tchmi-width="200" data-tchmi-width-unit="px" data-tchmi-auto-select-text="true" data-tchmi-ignore-invalid-values="true" data-tchmi-value-horizontal-alignment="Center" data-tchmi-value-font-size="30">
<script data-tchmi-target-attribute="data-tchmi-content-padding" type="application/json">
{
  "top": 3,
  "right": 3,
  "bottom": 3,
  "left": 3
}
</script>


<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiNumericInput_41.onUserInteractionFinished",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%s%PLC1.HMI_prom.UI_Tlak_test%/s%",
        "value": {
          "objectType": "Symbol",
          "valueType": "tchmi:general#/definitions/String",
          "symbolExpression": "%ctrl%TcHmiNumericInput_41::Value%/ctrl%"
        },
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TestButton" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiToggleButton" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="400" data-tchmi-left-unit="px" data-tchmi-text="Test segment" data-tchmi-top="59" data-tchmi-top-unit="px" data-tchmi-width="200" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-state-symbol="%s%PLC1.HMI_prom.UI_Start_test_segment%/s%">

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TestButton.onStateChanged",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "symbolExpression": "%s%PLC1.HMI_prom.UI_Start_test_segment%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%TestButton::BackgroundColor%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Color",
                  "value": {
                    "color": "rgba(20, 253, 10, 1)"
                  }
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%TestButton::BackgroundColor%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Color",
                  "value": null
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="PatkyVenButton" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiToggleButton" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="704" data-tchmi-left-unit="px" data-tchmi-text="Vsechny patky" data-tchmi-top="134" data-tchmi-top-unit="px" data-tchmi-width="200" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-state-symbol="%s%PLC1.HMI_prom.UI_Start_patky_ven%/s%">

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "PatkyVenButton.onStateChanged",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "symbolExpression": "%s%PLC1.HMI_prom.UI_Start_patky_ven%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%PatkyVenButton::BackgroundColor%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Color",
                  "value": {
                    "color": "rgba(20, 253, 10, 1)"
                  }
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%PatkyVenButton::BackgroundColor%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Color",
                  "value": null
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TestPatekButton" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiToggleButton" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="99" data-tchmi-left-unit="px" data-tchmi-text="Jednotlive patky " data-tchmi-top="134" data-tchmi-top-unit="px" data-tchmi-width="200" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-state-symbol="%s%PLC1.HMI_prom.UI_Test_patek%/s%">

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TestPatekButton.onStateChanged",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "symbolExpression": "%s%PLC1.HMI_prom.UI_Test_patek%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%TestPatekButton::BackgroundColor%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Color",
                  "value": {
                    "color": "rgba(20, 253, 10, 1)"
                  }
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%TestPatekButton::BackgroundColor%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Color",
                  "value": null
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiBarChart_11" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiBarChart" data-tchmi-height="65" data-tchmi-height-unit="px" data-tchmi-left="49" data-tchmi-left-unit="px" data-tchmi-top="439" data-tchmi-top-unit="px" data-tchmi-width="964" data-tchmi-width-unit="px" data-tchmi-x-axis-name="x Axis" data-tchmi-y-axis-name="y Axis 1" data-tchmi-y-axis-unit="s" data-tchmi-y-main-tick-max-value="2" data-tchmi-y-main-tick-min-value="0" data-tchmi-y-sub-tick-steps="4" data-tchmi-show-x-axis="false" data-tchmi-x-show-labels="true" data-tchmi-x-axis-auto-scaling="false" data-tchmi-x-main-tick-min-value="0" data-tchmi-x-main-tick-max-value="%s%PLC1.HMI_prom.HMI_param_stroje.Stp_Patka.Pocet_segmentu_patky%/s%" data-tchmi-x-main-tick-steps="%s%PLC1.HMI_prom.HMI_param_stroje.Stp_Patka.Pocet_segmentu_patky%/s%" data-tchmi-x-axis-decimal-places="0" data-tchmi-y-axis-auto-scaling="false" data-tchmi-show-y-axis="false" data-tchmi-y-show-labels="false" data-tchmi-bar-graph-data="%s%PLC1.Machine_outputs.Q_segmenty_patky%/s%" data-tchmi-y-main-tick-steps="2">
<script data-tchmi-target-attribute="data-tchmi-bar-graph-descriptions" type="application/json">
[
  {
    "barColor": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiBarChart::DefaultGraphColor%/tr%",
    "legendName": "data0"
  },
  {
    "barColor": "%tr%Control::TcHmi.Controls.Beckhoff.TcHmiBarChart::DefaultGraphColor%/tr%",
    "legendName": "data1"
  }
]
</script>

</div>
</div>